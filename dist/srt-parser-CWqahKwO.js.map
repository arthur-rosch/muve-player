{"version":3,"file":"srt-parser-CWqahKwO.js","sources":["../node_modules/media-captions/dist/prod/srt-parser.js"],"sourcesContent":["import { V as VTTParser, a as VTTBlock, b as VTTCue } from './index.js';\n\nconst MILLISECOND_SEP_RE = /,/g, TIMESTAMP_SEP = \"-->\";\nclass SRTParser extends VTTParser {\n  parse(line, lineCount) {\n    if (line === \"\") {\n      if (this.c) {\n        this.l.push(this.c);\n        this.h.onCue?.(this.c);\n        this.c = null;\n      }\n      this.e = VTTBlock.None;\n    } else if (this.e === VTTBlock.Cue) {\n      this.c.text += (this.c.text ? \"\\n\" : \"\") + line;\n    } else if (line.includes(TIMESTAMP_SEP)) {\n      const result = this.q(line, lineCount);\n      if (result) {\n        this.c = new VTTCue(result[0], result[1], result[2].join(\" \"));\n        this.c.id = this.n;\n        this.e = VTTBlock.Cue;\n      }\n    }\n    this.n = line;\n  }\n  q(line, lineCount) {\n    return super.q(line.replace(MILLISECOND_SEP_RE, \".\"), lineCount);\n  }\n}\nfunction createSRTParser() {\n  return new SRTParser();\n}\n\nexport { SRTParser, createSRTParser as default };\n"],"names":["MILLISECOND_SEP_RE","TIMESTAMP_SEP","SRTParser","VTTParser","line","lineCount","_b","_a","VTTBlock","result","VTTCue","createSRTParser"],"mappings":";AAEA,MAAMA,IAAqB,MAAMC,IAAgB;AACjD,MAAMC,UAAkBC,EAAU;AAAA,EAChC,MAAMC,GAAMC,GAAW;;AACrB,QAAID,MAAS;AACX,MAAI,KAAK,MACP,KAAK,EAAE,KAAK,KAAK,CAAC,IAClBE,KAAAC,IAAA,KAAK,GAAE,UAAP,QAAAD,EAAA,KAAAC,GAAe,KAAK,IACpB,KAAK,IAAI,OAEX,KAAK,IAAIC,EAAS;AAAA,aACT,KAAK,MAAMA,EAAS;AAC7B,WAAK,EAAE,SAAS,KAAK,EAAE,OAAO;AAAA,IAAO,MAAMJ;AAAA,aAClCA,EAAK,SAASH,CAAa,GAAG;AACvC,YAAMQ,IAAS,KAAK,EAAEL,GAAMC,CAAS;AACrC,MAAII,MACF,KAAK,IAAI,IAAIC,EAAOD,EAAO,CAAC,GAAGA,EAAO,CAAC,GAAGA,EAAO,CAAC,EAAE,KAAK,GAAG,CAAC,GAC7D,KAAK,EAAE,KAAK,KAAK,GACjB,KAAK,IAAID,EAAS;AAAA,IAE1B;AACI,SAAK,IAAIJ;AAAA,EACb;AAAA,EACE,EAAEA,GAAMC,GAAW;AACjB,WAAO,MAAM,EAAED,EAAK,QAAQJ,GAAoB,GAAG,GAAGK,CAAS;AAAA,EACnE;AACA;AACA,SAASM,IAAkB;AACzB,SAAO,IAAIT,EAAW;AACxB;","x_google_ignoreList":[0]}
{"version":3,"file":"prod-DTLJXtPo.js","sources":["../node_modules/media-captions/dist/prod/index.js"],"sourcesContent":["const ParseErrorCode = {\n  LoadFail: 0,\n  BadSignature: 1,\n  BadTimestamp: 2,\n  BadSettingValue: 3,\n  BadFormat: 4,\n  UnknownSetting: 5\n};\nclass ParseError extends Error {\n  code;\n  line;\n  constructor(init) {\n    super(init.reason);\n    this.code = init.code;\n    this.line = init.line;\n  }\n}\n\nconst LINE_TERMINATOR_RE = /\\r?\\n|\\r/gm;\nclass TextLineTransformStream {\n  writable;\n  readable;\n  constructor(encoding) {\n    const transformer = new TextStreamLineIterator(encoding);\n    this.writable = new WritableStream({\n      write(chunk) {\n        transformer.transform(chunk);\n      },\n      close() {\n        transformer.close();\n      }\n    });\n    this.readable = new ReadableStream({\n      start(controller) {\n        transformer.onLine = (line) => controller.enqueue(line);\n        transformer.onClose = () => controller.close();\n      }\n    });\n  }\n}\nclass TextStreamLineIterator {\n  a = \"\";\n  b;\n  onLine;\n  onClose;\n  constructor(encoding) {\n    this.b = new TextDecoder(encoding);\n  }\n  transform(chunk) {\n    this.a += this.b.decode(chunk, { stream: true });\n    const lines = this.a.split(LINE_TERMINATOR_RE);\n    this.a = lines.pop() || \"\";\n    for (let i = 0; i < lines.length; i++)\n      this.onLine(lines[i].trim());\n  }\n  close() {\n    if (this.a)\n      this.onLine(this.a.trim());\n    this.a = \"\";\n    this.onClose();\n  }\n}\n\nasync function parseText(text, options) {\n  const stream = new ReadableStream({\n    start(controller) {\n      const lines = text.split(LINE_TERMINATOR_RE);\n      for (const line of lines)\n        controller.enqueue(line);\n      controller.close();\n    }\n  });\n  return parseTextStream(stream, options);\n}\nasync function parseTextStream(stream, options) {\n  const type = options?.type ?? \"vtt\";\n  let factory;\n  if (typeof type === \"string\") {\n    switch (type) {\n      case \"srt\":\n        factory = (await import('./srt-parser.js')).default;\n        break;\n      case \"ssa\":\n      case \"ass\":\n        factory = (await import('./ssa-parser.js')).default;\n        break;\n      default:\n        factory = (await Promise.resolve().then(function () { return vttParser; })).default;\n    }\n  } else {\n    factory = type;\n  }\n  let result;\n  const reader = stream.getReader(), parser = factory(), errors = !!options?.strict || !!options?.errors;\n  await parser.init({\n    strict: false,\n    ...options,\n    errors,\n    type,\n    cancel() {\n      reader.cancel();\n      result = parser.done(true);\n    }\n  });\n  let i = 1;\n  while (true) {\n    const { value, done } = await reader.read();\n    if (done) {\n      parser.parse(\"\", i);\n      result = parser.done(false);\n      break;\n    }\n    parser.parse(value, i);\n    i++;\n  }\n  return result;\n}\n\nasync function parseResponse(response, options) {\n  const res = await response;\n  if (!res.ok || !res.body) {\n    let error;\n    return {\n      metadata: {},\n      cues: [],\n      regions: [],\n      errors: [error]\n    };\n  }\n  const contentType = res.headers.get(\"content-type\") || \"\", type = contentType.match(/text\\/(.*?)(?:;|$)/)?.[1], encoding = contentType.match(/charset=(.*?)(?:;|$)/)?.[1];\n  return parseByteStream(res.body, { type, encoding, ...options });\n}\nasync function parseByteStream(stream, { encoding = \"utf-8\", ...options } = {}) {\n  const textStream = stream.pipeThrough(new TextLineTransformStream(encoding));\n  return parseTextStream(textStream, options);\n}\n\nclass TextCue extends EventTarget {\n  /**\n   * A string that identifies the cue.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/TextTrackCue/id}\n   */\n  id = \"\";\n  /**\n   * A `double` that represents the video time that the cue will start being displayed, in seconds.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/TextTrackCue/startTime}\n   */\n  startTime;\n  /**\n   * A `double` that represents the video time that the cue will stop being displayed, in seconds.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/TextTrackCue/endTime}\n   */\n  endTime;\n  /**\n   * Returns a string with the contents of the cue.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/text}\n   */\n  text;\n  /**\n   * A `boolean` for whether the video will pause when this cue stops being displayed.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/TextTrackCue/pauseOnExit}\n   */\n  pauseOnExit = false;\n  constructor(startTime, endTime, text) {\n    super();\n    this.startTime = startTime;\n    this.endTime = endTime;\n    this.text = text;\n  }\n  addEventListener(type, listener, options) {\n    super.addEventListener(type, listener, options);\n  }\n  removeEventListener(type, listener, options) {\n    super.removeEventListener(type, listener, options);\n  }\n}\n\nconst IS_SERVER = typeof document === \"undefined\";\n\nconst CueBase = IS_SERVER ? TextCue : window.VTTCue;\nclass VTTCue extends CueBase {\n  /**\n   * A `VTTRegion` object describing the video's sub-region that the cue will be drawn onto,\n   * or `null` if none is assigned.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/region}\n   */\n  region = null;\n  /**\n   * The cue writing direction.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/vertical}\n   */\n  vertical = \"\";\n  /**\n   * Returns `true` if the `VTTCue.line` attribute is an integer number of lines or a percentage\n   * of the video size.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/snapToLines}\n   */\n  snapToLines = true;\n  /**\n   * Returns the line positioning of the cue. This can be the string `'auto'` or a number whose\n   * interpretation depends on the value of `VTTCue.snapToLines`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/line}\n   */\n  line = \"auto\";\n  /**\n   * Returns an enum representing the alignment of the `VTTCue.line`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/lineAlign}\n   */\n  lineAlign = \"start\";\n  /**\n   * Returns the indentation of the cue within the line. This can be the string `'auto'` or a\n   * number representing the percentage of the `VTTCue.region`, or the video size if `VTTCue`.region`\n   * is `null`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/position}\n   */\n  position = \"auto\";\n  /**\n   * Returns an enum representing the alignment of the cue. This is used to determine what\n   * the `VTTCue.position` is anchored to. The default is `'auto'`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/positionAlign}\n   */\n  positionAlign = \"auto\";\n  /**\n   * Returns a double representing the size of the cue, as a percentage of the video size.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/size}\n   */\n  size = 100;\n  /**\n   * Returns an enum representing the alignment of all the lines of text within the cue box.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/align}\n   */\n  align = \"center\";\n  /**\n   * Additional styles associated with the cue.\n   */\n  style;\n}\n\nclass VTTRegion {\n  /**\n   * A string that identifies the region.\n   */\n  id = \"\";\n  /**\n   * A `double` representing the width of the region, as a percentage of the video.\n   */\n  width = 100;\n  /**\n   * A `double` representing the height of the region, in number of lines.\n   */\n  lines = 3;\n  /**\n   * A `double` representing the region anchor X offset, as a percentage of the region.\n   */\n  regionAnchorX = 0;\n  /**\n   * A `double` representing the region anchor Y offset, as a percentage of the region.\n   */\n  regionAnchorY = 100;\n  /**\n   * A `double` representing the viewport anchor X offset, as a percentage of the video.\n   */\n  viewportAnchorX = 0;\n  /**\n   * A `double` representing the viewport anchor Y offset, as a percentage of the video.\n   */\n  viewportAnchorY = 100;\n  /**\n   * An enum representing how adding new cues will move existing cues.\n   */\n  scroll = \"\";\n}\n\nconst COMMA$1 = \",\", PERCENT_SIGN$1 = \"%\";\nfunction toNumber(text) {\n  const num = parseInt(text, 10);\n  return !Number.isNaN(num) ? num : null;\n}\nfunction toPercentage(text) {\n  const num = parseInt(text.replace(PERCENT_SIGN$1, \"\"), 10);\n  return !Number.isNaN(num) && num >= 0 && num <= 100 ? num : null;\n}\nfunction toCoords(text) {\n  if (!text.includes(COMMA$1))\n    return null;\n  const [x, y] = text.split(COMMA$1).map(toPercentage);\n  return x !== null && y !== null ? [x, y] : null;\n}\nfunction toFloat(text) {\n  const num = parseFloat(text);\n  return !Number.isNaN(num) ? num : null;\n}\n\nconst HEADER_MAGIC = \"WEBVTT\", COMMA = \",\", PERCENT_SIGN = \"%\", SETTING_SEP_RE = /[:=]/, SETTING_LINE_RE = /^[\\s\\t]*(region|vertical|line|position|size|align)[:=]/, NOTE_BLOCK_START = \"NOTE\", REGION_BLOCK_START = \"REGION\", REGION_BLOCK_START_RE = /^REGION:?[\\s\\t]+/, SPACE_RE = /[\\s\\t]+/, TIMESTAMP_SEP = \"-->\", TIMESTAMP_SEP_RE = /[\\s\\t]*-->[\\s\\t]+/, ALIGN_RE = /start|center|end|left|right/, LINE_ALIGN_RE = /start|center|end/, POS_ALIGN_RE = /line-(?:left|right)|center|auto/, TIMESTAMP_RE = /^(?:(\\d{1,2}):)?(\\d{2}):(\\d{2})(?:\\.(\\d{1,3}))?$/;\nvar VTTBlock = /* @__PURE__ */ ((VTTBlock2) => {\n  VTTBlock2[VTTBlock2[\"None\"] = 0] = \"None\";\n  VTTBlock2[VTTBlock2[\"Header\"] = 1] = \"Header\";\n  VTTBlock2[VTTBlock2[\"Cue\"] = 2] = \"Cue\";\n  VTTBlock2[VTTBlock2[\"Region\"] = 3] = \"Region\";\n  VTTBlock2[VTTBlock2[\"Note\"] = 4] = \"Note\";\n  return VTTBlock2;\n})(VTTBlock || {});\nclass VTTParser {\n  h;\n  e = 0;\n  i = {};\n  j = {};\n  l = [];\n  c = null;\n  d = null;\n  m = [];\n  f;\n  n = \"\";\n  async init(init) {\n    this.h = init;\n    if (init.strict)\n      this.e = 1;\n    if (init.errors)\n      this.f = (await import('./errors.js')).ParseErrorBuilder;\n  }\n  parse(line, lineCount) {\n    if (line === \"\") {\n      if (this.c) {\n        this.l.push(this.c);\n        this.h.onCue?.(this.c);\n        this.c = null;\n      } else if (this.d) {\n        this.j[this.d.id] = this.d;\n        this.h.onRegion?.(this.d);\n        this.d = null;\n      } else if (this.e === 1) {\n        this.k(line, lineCount);\n        this.h.onHeaderMetadata?.(this.i);\n      }\n      this.e = 0;\n    } else if (this.e) {\n      switch (this.e) {\n        case 1:\n          this.k(line, lineCount);\n          break;\n        case 2:\n          if (this.c) {\n            const hasText = this.c.text.length > 0;\n            if (!hasText && SETTING_LINE_RE.test(line)) {\n              this.o(line.split(SPACE_RE), lineCount);\n            } else {\n              this.c.text += (hasText ? \"\\n\" : \"\") + line;\n            }\n          }\n          break;\n        case 3:\n          this.p(line.split(SPACE_RE), lineCount);\n          break;\n      }\n    } else if (line.startsWith(NOTE_BLOCK_START)) {\n      this.e = 4;\n    } else if (line.startsWith(REGION_BLOCK_START)) {\n      this.e = 3;\n      this.d = new VTTRegion();\n      this.p(line.replace(REGION_BLOCK_START_RE, \"\").split(SPACE_RE), lineCount);\n    } else if (line.includes(TIMESTAMP_SEP)) {\n      const result = this.q(line, lineCount);\n      if (result) {\n        this.c = new VTTCue(result[0], result[1], \"\");\n        this.c.id = this.n;\n        this.o(result[2], lineCount);\n      }\n      this.e = 2;\n    } else if (lineCount === 1) {\n      this.k(line, lineCount);\n    }\n    this.n = line;\n  }\n  done() {\n    return {\n      metadata: this.i,\n      cues: this.l,\n      regions: Object.values(this.j),\n      errors: this.m\n    };\n  }\n  k(line, lineCount) {\n    if (lineCount > 1) {\n      if (SETTING_SEP_RE.test(line)) {\n        const [key, value] = line.split(SETTING_SEP_RE);\n        if (key)\n          this.i[key] = (value || \"\").replace(SPACE_RE, \"\");\n      }\n    } else if (line.startsWith(HEADER_MAGIC)) {\n      this.e = 1;\n    } else {\n      this.g(this.f?.r());\n    }\n  }\n  q(line, lineCount) {\n    const [startTimeText, trailingText = \"\"] = line.split(TIMESTAMP_SEP_RE), [endTimeText, ...settingsText] = trailingText.split(SPACE_RE), startTime = parseVTTTimestamp(startTimeText), endTime = parseVTTTimestamp(endTimeText);\n    if (startTime !== null && endTime !== null && endTime > startTime) {\n      return [startTime, endTime, settingsText];\n    } else {\n      if (startTime === null) {\n        this.g(this.f?.s(startTimeText, lineCount));\n      }\n      if (endTime === null) {\n        this.g(this.f?.t(endTimeText, lineCount));\n      }\n      if (startTime != null && endTime !== null && endTime > startTime) {\n        this.g(this.f?.u(startTime, endTime, lineCount));\n      }\n    }\n  }\n  /**\n   * @see {@link https://www.w3.org/TR/webvtt1/#region-settings-parsing}\n   */\n  p(settings, line) {\n    let badValue;\n    for (let i = 0; i < settings.length; i++) {\n      if (SETTING_SEP_RE.test(settings[i])) {\n        badValue = false;\n        const [name, value] = settings[i].split(SETTING_SEP_RE);\n        switch (name) {\n          case \"id\":\n            this.d.id = value;\n            break;\n          case \"width\":\n            const width = toPercentage(value);\n            if (width !== null)\n              this.d.width = width;\n            else\n              badValue = true;\n            break;\n          case \"lines\":\n            const lines = toNumber(value);\n            if (lines !== null)\n              this.d.lines = lines;\n            else\n              badValue = true;\n            break;\n          case \"regionanchor\":\n            const region = toCoords(value);\n            if (region !== null) {\n              this.d.regionAnchorX = region[0];\n              this.d.regionAnchorY = region[1];\n            } else\n              badValue = true;\n            break;\n          case \"viewportanchor\":\n            const viewport = toCoords(value);\n            if (viewport !== null) {\n              this.d.viewportAnchorX = viewport[0];\n              this.d.viewportAnchorY = viewport[1];\n            } else\n              badValue = true;\n            break;\n          case \"scroll\":\n            if (value === \"up\")\n              this.d.scroll = \"up\";\n            else\n              badValue = true;\n            break;\n          default:\n            this.g(this.f?.v(name, value, line));\n        }\n        if (badValue) {\n          this.g(this.f?.w(name, value, line));\n        }\n      }\n    }\n  }\n  /**\n   * @see {@link https://www.w3.org/TR/webvtt1/#cue-timings-and-settings-parsing}\n   */\n  o(settings, line) {\n    let badValue;\n    for (let i = 0; i < settings.length; i++) {\n      badValue = false;\n      if (SETTING_SEP_RE.test(settings[i])) {\n        const [name, value] = settings[i].split(SETTING_SEP_RE);\n        switch (name) {\n          case \"region\":\n            const region = this.j[value];\n            if (region)\n              this.c.region = region;\n            break;\n          case \"vertical\":\n            if (value === \"lr\" || value === \"rl\") {\n              this.c.vertical = value;\n              this.c.region = null;\n            } else\n              badValue = true;\n            break;\n          case \"line\":\n            const [linePos, lineAlign] = value.split(COMMA);\n            if (linePos.includes(PERCENT_SIGN)) {\n              const percentage = toPercentage(linePos);\n              if (percentage !== null) {\n                this.c.line = percentage;\n                this.c.snapToLines = false;\n              } else\n                badValue = true;\n            } else {\n              const number = toFloat(linePos);\n              if (number !== null)\n                this.c.line = number;\n              else\n                badValue = true;\n            }\n            if (LINE_ALIGN_RE.test(lineAlign)) {\n              this.c.lineAlign = lineAlign;\n            } else if (lineAlign) {\n              badValue = true;\n            }\n            if (this.c.line !== \"auto\")\n              this.c.region = null;\n            break;\n          case \"position\":\n            const [colPos, colAlign] = value.split(COMMA), position = toPercentage(colPos);\n            if (position !== null)\n              this.c.position = position;\n            else\n              badValue = true;\n            if (colAlign && POS_ALIGN_RE.test(colAlign)) {\n              this.c.positionAlign = colAlign;\n            } else if (colAlign) {\n              badValue = true;\n            }\n            break;\n          case \"size\":\n            const size = toPercentage(value);\n            if (size !== null) {\n              this.c.size = size;\n              if (size < 100)\n                this.c.region = null;\n            } else {\n              badValue = true;\n            }\n            break;\n          case \"align\":\n            if (ALIGN_RE.test(value)) {\n              this.c.align = value;\n            } else {\n              badValue = true;\n            }\n            break;\n          default:\n            this.g(this.f?.x(name, value, line));\n        }\n        if (badValue) {\n          this.g(this.f?.y(name, value, line));\n        }\n      }\n    }\n  }\n  g(error) {\n    if (!error)\n      return;\n    this.m.push(error);\n    if (this.h.strict) {\n      this.h.cancel();\n      throw error;\n    } else {\n      this.h.onError?.(error);\n    }\n  }\n}\nfunction parseVTTTimestamp(timestamp) {\n  const match = timestamp.match(TIMESTAMP_RE);\n  if (!match)\n    return null;\n  const hours = match[1] ? parseInt(match[1], 10) : 0, minutes = parseInt(match[2], 10), seconds = parseInt(match[3], 10), milliseconds = match[4] ? parseInt(match[4].padEnd(3, \"0\"), 10) : 0, total = hours * 3600 + minutes * 60 + seconds + milliseconds / 1e3;\n  if (hours < 0 || minutes < 0 || seconds < 0 || milliseconds < 0 || minutes > 59 || seconds > 59) {\n    return null;\n  }\n  return total;\n}\nfunction createVTTParser() {\n  return new VTTParser();\n}\n\nvar vttParser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  VTTBlock: VTTBlock,\n  VTTParser: VTTParser,\n  default: createVTTParser,\n  parseVTTTimestamp: parseVTTTimestamp\n});\n\nconst DIGIT_RE = /[0-9]/, MULTI_SPACE_RE = /[\\s\\t]+/, TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\",\n  timestamp: \"span\"\n}, HTML_ENTITIES = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&quot;\": '\"',\n  \"&#39;\": \"'\",\n  \"&nbsp;\": \"\\xA0\",\n  \"&lrm;\": \"\\u200E\",\n  \"&rlm;\": \"\\u200F\"\n}, HTML_ENTITY_RE = /&(?:amp|lt|gt|quot|#(0+)?39|nbsp|lrm|rlm);/g, COLORS = /* @__PURE__ */ new Set([\n  \"white\",\n  \"lime\",\n  \"cyan\",\n  \"red\",\n  \"yellow\",\n  \"magenta\",\n  \"blue\",\n  \"black\"\n]), BLOCK_TYPES = /* @__PURE__ */ new Set(Object.keys(TAG_NAME));\nfunction tokenizeVTTCue(cue) {\n  let buffer = \"\", mode = 1, result = [], stack = [], node;\n  for (let i = 0; i < cue.text.length; i++) {\n    const char = cue.text[i];\n    switch (mode) {\n      case 1:\n        if (char === \"<\") {\n          addText();\n          mode = 2;\n        } else {\n          buffer += char;\n        }\n        break;\n      case 2:\n        switch (char) {\n          case \"\\n\":\n          case \"\t\":\n          case \" \":\n            addNode();\n            mode = 4;\n            break;\n          case \".\":\n            addNode();\n            mode = 3;\n            break;\n          case \"/\":\n            mode = 5;\n            break;\n          case \">\":\n            addNode();\n            mode = 1;\n            break;\n          default:\n            if (!buffer && DIGIT_RE.test(char))\n              mode = 6;\n            buffer += char;\n            break;\n        }\n        break;\n      case 3:\n        switch (char) {\n          case \"\t\":\n          case \" \":\n          case \"\\n\":\n            addClass();\n            if (node)\n              node.class?.trim();\n            mode = 4;\n            break;\n          case \".\":\n            addClass();\n            break;\n          case \">\":\n            addClass();\n            if (node)\n              node.class?.trim();\n            mode = 1;\n            break;\n          default:\n            buffer += char;\n        }\n        break;\n      case 4:\n        if (char === \">\") {\n          buffer = buffer.replace(MULTI_SPACE_RE, \" \");\n          if (node?.type === \"v\")\n            node.voice = replaceHTMLEntities(buffer);\n          else if (node?.type === \"lang\")\n            node.lang = replaceHTMLEntities(buffer);\n          buffer = \"\";\n          mode = 1;\n        } else {\n          buffer += char;\n        }\n        break;\n      case 5:\n        if (char === \">\") {\n          buffer = \"\";\n          node = stack.pop();\n          mode = 1;\n        }\n        break;\n      case 6:\n        if (char === \">\") {\n          const time = parseVTTTimestamp(buffer);\n          if (time !== null && time >= cue.startTime && time <= cue.endTime) {\n            buffer = \"timestamp\";\n            addNode();\n            node.time = time;\n          }\n          buffer = \"\";\n          mode = 1;\n        } else {\n          buffer += char;\n        }\n        break;\n    }\n  }\n  function addNode() {\n    if (BLOCK_TYPES.has(buffer)) {\n      const parent = node;\n      node = createBlockNode(buffer);\n      if (parent) {\n        if (stack[stack.length - 1] !== parent)\n          stack.push(parent);\n        parent.children.push(node);\n      } else\n        result.push(node);\n    }\n    buffer = \"\";\n    mode = 1;\n  }\n  function addClass() {\n    if (node && buffer) {\n      const color = buffer.replace(\"bg_\", \"\");\n      if (COLORS.has(color)) {\n        node[buffer.startsWith(\"bg_\") ? \"bgColor\" : \"color\"] = color;\n      } else {\n        node.class = !node.class ? buffer : node.class + \" \" + buffer;\n      }\n    }\n    buffer = \"\";\n  }\n  function addText() {\n    if (!buffer)\n      return;\n    const text = { type: \"text\", data: replaceHTMLEntities(buffer) };\n    node ? node.children.push(text) : result.push(text);\n    buffer = \"\";\n  }\n  if (mode === 1)\n    addText();\n  return result;\n}\nfunction createBlockNode(type) {\n  return {\n    tagName: TAG_NAME[type],\n    type,\n    children: []\n  };\n}\nfunction replaceHTMLEntities(text) {\n  return text.replace(HTML_ENTITY_RE, (entity) => HTML_ENTITIES[entity] || \"'\");\n}\n\nfunction setCSSVar(el, name, value) {\n  el.style.setProperty(`--${name}`, value + \"\");\n}\nfunction setDataAttr(el, name, value = true) {\n  el.setAttribute(`data-${name}`, value === true ? \"\" : value + \"\");\n}\nfunction setPartAttr(el, name) {\n  el.setAttribute(\"data-part\", name);\n}\nfunction getLineHeight(el) {\n  return parseFloat(getComputedStyle(el).lineHeight) || 0;\n}\n\nfunction createVTTCueTemplate(cue) {\n  if (IS_SERVER) {\n    throw Error(\n      \"[media-captions] called `createVTTCueTemplate` on the server - use `renderVTTCueString`\"\n    );\n  }\n  const template = document.createElement(\"template\");\n  template.innerHTML = renderVTTCueString(cue);\n  return { cue, content: template.content };\n}\nfunction renderVTTCueString(cue, currentTime = 0) {\n  return renderVTTTokensString(tokenizeVTTCue(cue), currentTime);\n}\nfunction renderVTTTokensString(tokens, currentTime = 0) {\n  let attrs, result = \"\";\n  for (const token of tokens) {\n    if (token.type === \"text\") {\n      result += token.data;\n    } else {\n      const isTimestamp = token.type === \"timestamp\";\n      attrs = {};\n      attrs.class = token.class;\n      attrs.title = token.type === \"v\" && token.voice;\n      attrs.lang = token.type === \"lang\" && token.lang;\n      attrs[\"data-part\"] = token.type === \"v\" && \"voice\";\n      if (isTimestamp) {\n        attrs[\"data-part\"] = \"timed\";\n        attrs[\"data-time\"] = token.time;\n        attrs[\"data-future\"] = token.time > currentTime;\n        attrs[\"data-past\"] = token.time < currentTime;\n      }\n      attrs.style = `${token.color ? `color: ${token.color};` : \"\"}${token.bgColor ? `background-color: ${token.bgColor};` : \"\"}`;\n      const attributes = Object.entries(attrs).filter((v) => v[1]).map((v) => `${v[0]}=\"${v[1] === true ? \"\" : v[1]}\"`).join(\" \");\n      result += `<${token.tagName}${attributes ? \" \" + attributes : \"\"}>${renderVTTTokensString(\n        token.children\n      )}</${token.tagName}>`;\n    }\n  }\n  return result;\n}\nfunction updateTimedVTTCueNodes(root, currentTime) {\n  if (IS_SERVER)\n    return;\n  for (const el of root.querySelectorAll('[data-part=\"timed\"]')) {\n    const time = Number(el.getAttribute(\"data-time\"));\n    if (Number.isNaN(time))\n      continue;\n    if (time > currentTime)\n      setDataAttr(el, \"future\");\n    else\n      el.removeAttribute(\"data-future\");\n    if (time < currentTime)\n      setDataAttr(el, \"past\");\n    else\n      el.removeAttribute(\"data-past\");\n  }\n}\n\nfunction debounce(fn, delay) {\n  let timeout = null, args;\n  function run() {\n    clear();\n    fn(...args);\n    args = void 0;\n  }\n  function clear() {\n    clearTimeout(timeout);\n    timeout = null;\n  }\n  function debounce2() {\n    args = [].slice.call(arguments);\n    clear();\n    timeout = setTimeout(run, delay);\n  }\n  return debounce2;\n}\n\nconst STARTING_BOX = Symbol(0);\nfunction createBox(box) {\n  if (box instanceof HTMLElement) {\n    return {\n      top: box.offsetTop,\n      width: box.clientWidth,\n      height: box.clientHeight,\n      left: box.offsetLeft,\n      right: box.offsetLeft + box.clientWidth,\n      bottom: box.offsetTop + box.clientHeight\n    };\n  }\n  return { ...box };\n}\nfunction moveBox(box, axis, delta) {\n  switch (axis) {\n    case \"+x\":\n      box.left += delta;\n      box.right += delta;\n      break;\n    case \"-x\":\n      box.left -= delta;\n      box.right -= delta;\n      break;\n    case \"+y\":\n      box.top += delta;\n      box.bottom += delta;\n      break;\n    case \"-y\":\n      box.top -= delta;\n      box.bottom -= delta;\n      break;\n  }\n}\nfunction isBoxCollision(a, b) {\n  return a.left <= b.right && a.right >= b.left && a.top <= b.bottom && a.bottom >= b.top;\n}\nfunction isAnyBoxCollision(box, boxes) {\n  for (let i = 0; i < boxes.length; i++)\n    if (isBoxCollision(box, boxes[i]))\n      return boxes[i];\n  return null;\n}\nfunction isWithinBox(container, box) {\n  return box.top >= 0 && box.bottom <= container.height && box.left >= 0 && box.right <= container.width;\n}\nfunction isBoxOutOfBounds(container, box, axis) {\n  switch (axis) {\n    case \"+x\":\n      return box.left < 0;\n    case \"-x\":\n      return box.right > container.width;\n    case \"+y\":\n      return box.top < 0;\n    case \"-y\":\n      return box.bottom > container.height;\n  }\n}\nfunction calcBoxIntersectPercentage(container, box) {\n  const x = Math.max(0, Math.min(container.width, box.right) - Math.max(0, box.left)), y = Math.max(0, Math.min(container.height, box.bottom) - Math.max(0, box.top)), intersectArea = x * y;\n  return intersectArea / (container.height * container.width);\n}\nfunction createCSSBox(container, box) {\n  return {\n    top: box.top / container.height,\n    left: box.left / container.width,\n    right: (container.width - box.right) / container.width,\n    bottom: (container.height - box.bottom) / container.height\n  };\n}\nfunction resolveRelativeBox(container, box) {\n  box.top = box.top * container.height;\n  box.left = box.left * container.width;\n  box.right = container.width - box.right * container.width;\n  box.bottom = container.height - box.bottom * container.height;\n  return box;\n}\nconst BOX_SIDES = [\"top\", \"left\", \"right\", \"bottom\"];\nfunction setBoxCSSVars(el, container, box, prefix) {\n  const cssBox = createCSSBox(container, box);\n  for (const side of BOX_SIDES) {\n    setCSSVar(el, `${prefix}-${side}`, cssBox[side] * 100 + \"%\");\n  }\n}\nfunction avoidBoxCollisions(container, box, boxes, axis) {\n  let percentage = 1, positionedBox, startBox = { ...box };\n  for (let i = 0; i < axis.length; i++) {\n    while (isBoxOutOfBounds(container, box, axis[i]) || isWithinBox(container, box) && isAnyBoxCollision(box, boxes)) {\n      moveBox(box, axis[i], 1);\n    }\n    if (isWithinBox(container, box))\n      return box;\n    const intersection = calcBoxIntersectPercentage(container, box);\n    if (percentage > intersection) {\n      positionedBox = { ...box };\n      percentage = intersection;\n    }\n    box = { ...startBox };\n  }\n  return positionedBox || startBox;\n}\n\nconst POSITION_OVERRIDE = Symbol(0);\nfunction positionCue(container, cue, displayEl, boxes) {\n  let cueEl = displayEl.firstElementChild, line = computeCueLine(cue), displayBox, axis = [];\n  if (!displayEl[STARTING_BOX]) {\n    displayEl[STARTING_BOX] = createStartingBox(container, displayEl);\n  }\n  displayBox = resolveRelativeBox(container, { ...displayEl[STARTING_BOX] });\n  if (displayEl[POSITION_OVERRIDE]) {\n    axis = [displayEl[POSITION_OVERRIDE] === \"top\" ? \"+y\" : \"-y\", \"+x\", \"-x\"];\n  } else if (cue.snapToLines) {\n    let size;\n    switch (cue.vertical) {\n      case \"\":\n        axis = [\"+y\", \"-y\"];\n        size = \"height\";\n        break;\n      case \"rl\":\n        axis = [\"+x\", \"-x\"];\n        size = \"width\";\n        break;\n      case \"lr\":\n        axis = [\"-x\", \"+x\"];\n        size = \"width\";\n        break;\n    }\n    let step = getLineHeight(cueEl), position = step * Math.round(line), maxPosition = container[size] + step, initialAxis = axis[0];\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n    if (line < 0) {\n      position += cue.vertical === \"\" ? container.height : container.width;\n      axis = axis.reverse();\n    }\n    moveBox(displayBox, initialAxis, position);\n  } else {\n    const isHorizontal = cue.vertical === \"\", posAxis = isHorizontal ? \"+y\" : \"+x\", size = isHorizontal ? displayBox.height : displayBox.width;\n    moveBox(\n      displayBox,\n      posAxis,\n      (isHorizontal ? container.height : container.width) * line / 100\n    );\n    moveBox(\n      displayBox,\n      posAxis,\n      cue.lineAlign === \"center\" ? size / 2 : cue.lineAlign === \"end\" ? size : 0\n    );\n    axis = isHorizontal ? [\"-y\", \"+y\", \"-x\", \"+x\"] : [\"-x\", \"+x\", \"-y\", \"+y\"];\n  }\n  displayBox = avoidBoxCollisions(container, displayBox, boxes, axis);\n  setBoxCSSVars(displayEl, container, displayBox, \"cue\");\n  return displayBox;\n}\nfunction createStartingBox(container, cueEl) {\n  const box = createBox(cueEl), pos = getStyledPositions(cueEl);\n  cueEl[POSITION_OVERRIDE] = false;\n  if (pos.top) {\n    box.top = pos.top;\n    box.bottom = pos.top + box.height;\n    cueEl[POSITION_OVERRIDE] = \"top\";\n  }\n  if (pos.bottom) {\n    const bottom = container.height - pos.bottom;\n    box.top = bottom - box.height;\n    box.bottom = bottom;\n    cueEl[POSITION_OVERRIDE] = \"bottom\";\n  }\n  if (pos.left)\n    box.left = pos.left;\n  if (pos.right)\n    box.right = container.width - pos.right;\n  return createCSSBox(container, box);\n}\nfunction getStyledPositions(el) {\n  const positions = {};\n  for (const side of BOX_SIDES) {\n    positions[side] = parseFloat(el.style.getPropertyValue(`--cue-${side}`));\n  }\n  return positions;\n}\nfunction computeCueLine(cue) {\n  if (cue.line === \"auto\") {\n    if (!cue.snapToLines) {\n      return 100;\n    } else {\n      return -1;\n    }\n  }\n  return cue.line;\n}\nfunction computeCuePosition(cue) {\n  if (cue.position === \"auto\") {\n    switch (cue.align) {\n      case \"start\":\n      case \"left\":\n        return 0;\n      case \"right\":\n      case \"end\":\n        return 100;\n      default:\n        return 50;\n    }\n  }\n  return cue.position;\n}\nfunction computeCuePositionAlignment(cue, dir) {\n  if (cue.positionAlign === \"auto\") {\n    switch (cue.align) {\n      case \"start\":\n        return dir === \"ltr\" ? \"line-left\" : \"line-right\";\n      case \"end\":\n        return dir === \"ltr\" ? \"line-right\" : \"line-left\";\n      case \"center\":\n        return \"center\";\n      default:\n        return `line-${cue.align}`;\n    }\n  }\n  return cue.positionAlign;\n}\n\nconst REGION_AXIS = [\"-y\", \"+y\", \"-x\", \"+x\"];\nfunction positionRegion(container, region, regionEl, boxes) {\n  let cues = Array.from(regionEl.querySelectorAll('[data-part=\"cue-display\"]')), height = 0, limit = Math.max(0, cues.length - region.lines);\n  for (let i = cues.length - 1; i >= limit; i--) {\n    height += cues[i].offsetHeight;\n  }\n  setCSSVar(regionEl, \"region-height\", height + \"px\");\n  if (!regionEl[STARTING_BOX]) {\n    regionEl[STARTING_BOX] = createCSSBox(container, createBox(regionEl));\n  }\n  let box = { ...regionEl[STARTING_BOX] };\n  box = resolveRelativeBox(container, box);\n  box.width = regionEl.clientWidth;\n  box.height = height;\n  box.right = box.left + box.width;\n  box.bottom = box.top + height;\n  box = avoidBoxCollisions(container, box, boxes, REGION_AXIS);\n  setBoxCSSVars(regionEl, container, box, \"region\");\n  return box;\n}\n\nclass CaptionsRenderer {\n  overlay;\n  z;\n  A = 0;\n  C = \"ltr\";\n  B = [];\n  D = false;\n  E;\n  j = /* @__PURE__ */ new Map();\n  l = /* @__PURE__ */ new Map();\n  /* Text direction. */\n  get dir() {\n    return this.C;\n  }\n  set dir(dir) {\n    this.C = dir;\n    setDataAttr(this.overlay, \"dir\", dir);\n  }\n  get currentTime() {\n    return this.A;\n  }\n  set currentTime(time) {\n    this.A = time;\n    this.update();\n  }\n  constructor(overlay, init) {\n    this.overlay = overlay;\n    this.dir = init?.dir ?? \"ltr\";\n    overlay.setAttribute(\"translate\", \"yes\");\n    overlay.setAttribute(\"aria-live\", \"off\");\n    overlay.setAttribute(\"aria-atomic\", \"true\");\n    setPartAttr(overlay, \"captions\");\n    this.G();\n    this.E = new ResizeObserver(this.I.bind(this));\n    this.E.observe(overlay);\n  }\n  changeTrack({ regions, cues }) {\n    this.reset();\n    this.J(regions);\n    for (const cue of cues)\n      this.l.set(cue, null);\n    this.update();\n  }\n  addCue(cue) {\n    this.l.set(cue, null);\n    this.update();\n  }\n  removeCue(cue) {\n    this.l.delete(cue);\n    this.update();\n  }\n  update(forceUpdate = false) {\n    this.H(forceUpdate);\n  }\n  reset() {\n    this.l.clear();\n    this.j.clear();\n    this.B = [];\n    this.overlay.textContent = \"\";\n  }\n  destroy() {\n    this.reset();\n    this.E.disconnect();\n  }\n  I() {\n    this.D = true;\n    this.K();\n  }\n  K = debounce(() => {\n    this.D = false;\n    this.G();\n    for (const el of this.j.values()) {\n      el[STARTING_BOX] = null;\n    }\n    for (const el of this.l.values()) {\n      if (el)\n        el[STARTING_BOX] = null;\n    }\n    this.H(true);\n  }, 50);\n  G() {\n    this.z = createBox(this.overlay);\n    setCSSVar(this.overlay, \"overlay-width\", this.z.width + \"px\");\n    setCSSVar(this.overlay, \"overlay-height\", this.z.height + \"px\");\n  }\n  H(forceUpdate = false) {\n    if (!this.l.size || this.D)\n      return;\n    let cue, activeCues = [...this.l.keys()].filter((cue2) => this.A >= cue2.startTime && this.A <= cue2.endTime).sort(\n      (cueA, cueB) => cueA.startTime !== cueB.startTime ? cueA.startTime - cueB.startTime : cueA.endTime - cueB.endTime\n    ), activeRegions = activeCues.map((cue2) => cue2.region);\n    for (let i = 0; i < this.B.length; i++) {\n      cue = this.B[i];\n      if (activeCues[i] === cue)\n        continue;\n      if (cue.region && !activeRegions.includes(cue.region)) {\n        const regionEl = this.j.get(cue.region.id);\n        if (regionEl) {\n          regionEl.removeAttribute(\"data-active\");\n          forceUpdate = true;\n        }\n      }\n      const cueEl = this.l.get(cue);\n      if (cueEl) {\n        cueEl.remove();\n        forceUpdate = true;\n      }\n    }\n    for (let i = 0; i < activeCues.length; i++) {\n      cue = activeCues[i];\n      let cueEl = this.l.get(cue);\n      if (!cueEl)\n        this.l.set(cue, cueEl = this.L(cue));\n      const regionEl = this.F(cue) && this.j.get(cue.region.id);\n      if (regionEl && !regionEl.hasAttribute(\"data-active\")) {\n        requestAnimationFrame(() => setDataAttr(regionEl, \"active\"));\n        forceUpdate = true;\n      }\n      if (!cueEl.isConnected) {\n        (regionEl || this.overlay).append(cueEl);\n        forceUpdate = true;\n      }\n    }\n    if (forceUpdate) {\n      const boxes = [], seen = /* @__PURE__ */ new Set();\n      for (let i = activeCues.length - 1; i >= 0; i--) {\n        cue = activeCues[i];\n        if (seen.has(cue.region || cue))\n          continue;\n        const isRegion = this.F(cue), el = isRegion ? this.j.get(cue.region.id) : this.l.get(cue);\n        if (isRegion) {\n          boxes.push(positionRegion(this.z, cue.region, el, boxes));\n        } else {\n          boxes.push(positionCue(this.z, cue, el, boxes));\n        }\n        seen.add(isRegion ? cue.region : cue);\n      }\n    }\n    updateTimedVTTCueNodes(this.overlay, this.A);\n    this.B = activeCues;\n  }\n  J(regions) {\n    if (!regions)\n      return;\n    for (const region of regions) {\n      const el = this.M(region);\n      this.j.set(region.id, el);\n      this.overlay.append(el);\n    }\n  }\n  M(region) {\n    const el = document.createElement(\"div\");\n    setPartAttr(el, \"region\");\n    setDataAttr(el, \"id\", region.id);\n    setDataAttr(el, \"scroll\", region.scroll);\n    setCSSVar(el, \"region-width\", region.width + \"%\");\n    setCSSVar(el, \"region-anchor-x\", region.regionAnchorX);\n    setCSSVar(el, \"region-anchor-y\", region.regionAnchorY);\n    setCSSVar(el, \"region-viewport-anchor-x\", region.viewportAnchorX);\n    setCSSVar(el, \"region-viewport-anchor-y\", region.viewportAnchorY);\n    setCSSVar(el, \"region-lines\", region.lines);\n    return el;\n  }\n  L(cue) {\n    const display = document.createElement(\"div\"), position = computeCuePosition(cue), positionAlignment = computeCuePositionAlignment(cue, this.C);\n    setPartAttr(display, \"cue-display\");\n    if (cue.vertical !== \"\")\n      setDataAttr(display, \"vertical\");\n    setCSSVar(display, \"cue-text-align\", cue.align);\n    if (cue.style) {\n      for (const prop of Object.keys(cue.style)) {\n        display.style.setProperty(prop, cue.style[prop]);\n      }\n    }\n    if (!this.F(cue)) {\n      setCSSVar(\n        display,\n        \"cue-writing-mode\",\n        cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\"\n      );\n      if (!cue.style?.[\"--cue-width\"]) {\n        let maxSize = position;\n        if (positionAlignment === \"line-left\") {\n          maxSize = 100 - position;\n        } else if (positionAlignment === \"center\" && position <= 50) {\n          maxSize = position * 2;\n        } else if (positionAlignment === \"center\" && position > 50) {\n          maxSize = (100 - position) * 2;\n        }\n        const size = cue.size < maxSize ? cue.size : maxSize;\n        if (cue.vertical === \"\")\n          setCSSVar(display, \"cue-width\", size + \"%\");\n        else\n          setCSSVar(display, \"cue-height\", size + \"%\");\n      }\n    } else {\n      setCSSVar(\n        display,\n        \"cue-offset\",\n        `${position - (positionAlignment === \"line-right\" ? 100 : positionAlignment === \"center\" ? 50 : 0)}%`\n      );\n    }\n    const el = document.createElement(\"div\");\n    setPartAttr(el, \"cue\");\n    if (cue.id)\n      setDataAttr(el, \"id\", cue.id);\n    el.innerHTML = renderVTTCueString(cue);\n    display.append(el);\n    return display;\n  }\n  F(cue) {\n    return cue.region && cue.size === 100 && cue.vertical === \"\" && cue.line === \"auto\";\n  }\n}\n\nexport { CaptionsRenderer as C, ParseError as P, TextCue as T, VTTParser as V, VTTBlock as a, VTTCue as b, ParseErrorCode as c, parseResponse as d, parseByteStream as e, parseText as f, parseTextStream as g, VTTRegion as h, createVTTCueTemplate as i, renderVTTTokensString as j, parseVTTTimestamp as p, renderVTTCueString as r, tokenizeVTTCue as t, updateTimedVTTCueNodes as u };\n"],"names":["ParseErrorCode","ParseError","init","__publicField","LINE_TERMINATOR_RE","TextLineTransformStream","encoding","transformer","TextStreamLineIterator","chunk","controller","line","lines","i","parseText","text","options","stream","parseTextStream","type","factory","vttParser","result","reader","parser","errors","value","done","parseResponse","response","_a","_b","res","contentType","parseByteStream","textStream","TextCue","startTime","endTime","listener","IS_SERVER","CueBase","VTTCue","VTTRegion","COMMA$1","PERCENT_SIGN$1","toNumber","num","toPercentage","toCoords","x","y","toFloat","HEADER_MAGIC","COMMA","PERCENT_SIGN","SETTING_SEP_RE","SETTING_LINE_RE","NOTE_BLOCK_START","REGION_BLOCK_START","REGION_BLOCK_START_RE","SPACE_RE","TIMESTAMP_SEP","TIMESTAMP_SEP_RE","ALIGN_RE","LINE_ALIGN_RE","POS_ALIGN_RE","TIMESTAMP_RE","VTTBlock","VTTBlock2","VTTParser","lineCount","_c","_d","_e","_f","hasText","key","startTimeText","trailingText","endTimeText","settingsText","parseVTTTimestamp","settings","badValue","name","width","region","viewport","linePos","lineAlign","percentage","number","colPos","colAlign","position","size","error","timestamp","match","hours","minutes","seconds","milliseconds","total","createVTTParser","DIGIT_RE","MULTI_SPACE_RE","TAG_NAME","HTML_ENTITIES","HTML_ENTITY_RE","COLORS","BLOCK_TYPES","tokenizeVTTCue","cue","buffer","mode","stack","node","char","addText","addNode","addClass","replaceHTMLEntities","time","parent","createBlockNode","color","entity","setCSSVar","el","setDataAttr","setPartAttr","getLineHeight","createVTTCueTemplate","template","renderVTTCueString","currentTime","renderVTTTokensString","tokens","attrs","token","isTimestamp","attributes","v","updateTimedVTTCueNodes","root","debounce","fn","delay","timeout","args","run","clear","debounce2","STARTING_BOX","createBox","box","moveBox","axis","delta","isBoxCollision","a","b","isAnyBoxCollision","boxes","isWithinBox","container","isBoxOutOfBounds","calcBoxIntersectPercentage","createCSSBox","resolveRelativeBox","BOX_SIDES","setBoxCSSVars","prefix","cssBox","side","avoidBoxCollisions","positionedBox","startBox","intersection","POSITION_OVERRIDE","positionCue","displayEl","cueEl","computeCueLine","displayBox","createStartingBox","step","maxPosition","initialAxis","isHorizontal","posAxis","pos","getStyledPositions","bottom","positions","computeCuePosition","computeCuePositionAlignment","dir","REGION_AXIS","positionRegion","regionEl","cues","height","limit","CaptionsRenderer","overlay","regions","forceUpdate","activeCues","cue2","cueA","cueB","activeRegions","seen","isRegion","display","positionAlignment","prop","maxSize"],"mappings":"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","x_google_ignoreList":[0]}
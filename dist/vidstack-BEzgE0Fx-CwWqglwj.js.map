{"version":3,"file":"vidstack-BEzgE0Fx-CwWqglwj.js","sources":["../node_modules/@vidstack/react/prod/chunks/vidstack-BEzgE0Fx.js"],"sourcesContent":["\"use client\"\n\nimport { IS_CHROME, IS_IOS, canGoogleCastSrc, IS_SERVER, loadScript } from './vidstack-WyKbSRm0.js';\nimport { listenEvent, peek } from './vidstack-CNjv_Zem.js';\n\nfunction getCastFrameworkURL() {\n  return \"https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1\";\n}\nfunction hasLoadedCastFramework() {\n  return !!window.cast?.framework;\n}\nfunction isCastAvailable() {\n  return !!window.chrome?.cast?.isAvailable;\n}\nfunction isCastConnected() {\n  return getCastContext().getCastState() === cast.framework.CastState.CONNECTED;\n}\nfunction getCastContext() {\n  return window.cast.framework.CastContext.getInstance();\n}\nfunction getCastSession() {\n  return getCastContext().getCurrentSession();\n}\nfunction getCastSessionMedia() {\n  return getCastSession()?.getSessionObj().media[0];\n}\nfunction hasActiveCastSession(src) {\n  const contentId = getCastSessionMedia()?.media.contentId;\n  return contentId === src?.src;\n}\nfunction getDefaultCastOptions() {\n  return {\n    language: \"en-US\",\n    autoJoinPolicy: chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED,\n    receiverApplicationId: chrome.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID,\n    resumeSavedSession: true,\n    androidReceiverCompatible: true\n  };\n}\nfunction getCastErrorMessage(code) {\n  const defaultMessage = `Google Cast Error Code: ${code}`;\n  return defaultMessage;\n}\nfunction listenCastContextEvent(type, handler) {\n  return listenEvent(getCastContext(), type, handler);\n}\n\nclass GoogleCastLoader {\n  name = \"google-cast\";\n  target;\n  #player;\n  /**\n   * @see {@link https://developers.google.com/cast/docs/reference/web_sender/cast.framework.CastContext}\n   */\n  get cast() {\n    return getCastContext();\n  }\n  mediaType() {\n    return \"video\";\n  }\n  canPlay(src) {\n    return IS_CHROME && !IS_IOS && canGoogleCastSrc(src);\n  }\n  async prompt(ctx) {\n    let loadEvent, openEvent, errorEvent;\n    try {\n      loadEvent = await this.#loadCastFramework(ctx);\n      if (!this.#player) {\n        this.#player = new cast.framework.RemotePlayer();\n        new cast.framework.RemotePlayerController(this.#player);\n      }\n      openEvent = ctx.player.createEvent(\"google-cast-prompt-open\", {\n        trigger: loadEvent\n      });\n      ctx.player.dispatchEvent(openEvent);\n      this.#notifyRemoteStateChange(ctx, \"connecting\", openEvent);\n      await this.#showPrompt(peek(ctx.$props.googleCast));\n      ctx.$state.remotePlaybackInfo.set({\n        deviceName: getCastSession()?.getCastDevice().friendlyName\n      });\n      if (isCastConnected()) this.#notifyRemoteStateChange(ctx, \"connected\", openEvent);\n    } catch (code) {\n      const error = code instanceof Error ? code : this.#createError(\n        (code + \"\").toUpperCase(),\n        \"Prompt failed.\"\n      );\n      errorEvent = ctx.player.createEvent(\"google-cast-prompt-error\", {\n        detail: error,\n        trigger: openEvent ?? loadEvent,\n        cancelable: true\n      });\n      ctx.player.dispatch(errorEvent);\n      this.#notifyRemoteStateChange(\n        ctx,\n        isCastConnected() ? \"connected\" : \"disconnected\",\n        errorEvent\n      );\n      throw error;\n    } finally {\n      ctx.player.dispatch(\"google-cast-prompt-close\", {\n        trigger: errorEvent ?? openEvent ?? loadEvent\n      });\n    }\n  }\n  async load(ctx) {\n    if (IS_SERVER) {\n      throw Error(\"[vidstack] can not load google cast provider server-side\");\n    }\n    if (!this.#player) {\n      throw Error(\"[vidstack] google cast player was not initialized\");\n    }\n    return new (await import('./vidstack-7jdJQx_M.js')).GoogleCastProvider(this.#player, ctx);\n  }\n  async #loadCastFramework(ctx) {\n    if (hasLoadedCastFramework()) return;\n    const loadStartEvent = ctx.player.createEvent(\"google-cast-load-start\");\n    ctx.player.dispatch(loadStartEvent);\n    await loadScript(getCastFrameworkURL());\n    await customElements.whenDefined(\"google-cast-launcher\");\n    const loadedEvent = ctx.player.createEvent(\"google-cast-loaded\", { trigger: loadStartEvent });\n    ctx.player.dispatch(loadedEvent);\n    if (!isCastAvailable()) {\n      throw this.#createError(\"CAST_NOT_AVAILABLE\", \"Google Cast not available on this platform.\");\n    }\n    return loadedEvent;\n  }\n  async #showPrompt(options) {\n    this.#setOptions(options);\n    const errorCode = await this.cast.requestSession();\n    if (errorCode) {\n      throw this.#createError(\n        errorCode.toUpperCase(),\n        getCastErrorMessage(errorCode)\n      );\n    }\n  }\n  #setOptions(options) {\n    this.cast?.setOptions({\n      ...getDefaultCastOptions(),\n      ...options\n    });\n  }\n  #notifyRemoteStateChange(ctx, state, trigger) {\n    const detail = { type: \"google-cast\", state };\n    ctx.notify(\"remote-playback-change\", detail, trigger);\n  }\n  #createError(code, message) {\n    const error = Error(message);\n    error.code = code;\n    return error;\n  }\n}\n\nvar loader = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  GoogleCastLoader: GoogleCastLoader\n});\n\nexport { getCastContext, getCastErrorMessage, getCastSession, getCastSessionMedia, hasActiveCastSession, listenCastContextEvent, loader };\n"],"names":["getCastFrameworkURL","hasLoadedCastFramework","_a","isCastAvailable","_b","isCastConnected","getCastContext","getCastSession","getCastSessionMedia","hasActiveCastSession","src","getDefaultCastOptions","getCastErrorMessage","code","listenCastContextEvent","type","handler","listenEvent","GoogleCastLoader","__privateAdd","_GoogleCastLoader_instances","__publicField","_player","IS_CHROME","IS_IOS","canGoogleCastSrc","ctx","loadEvent","openEvent","errorEvent","__privateMethod","loadCastFramework_fn","__privateGet","__privateSet","notifyRemoteStateChange_fn","showPrompt_fn","peek","error","createError_fn","IS_SERVER","loadStartEvent","loadScript","loadedEvent","options","setOptions_fn","errorCode","state","trigger","detail","message","loader"],"mappings":"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","x_google_ignoreList":[0]}
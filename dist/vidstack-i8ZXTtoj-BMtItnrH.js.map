{"version":3,"file":"vidstack-i8ZXTtoj-BMtItnrH.js","sources":["../node_modules/@vidstack/react/prod/chunks/vidstack-i8ZXTtoj.js"],"sourcesContent":["\"use client\"\n\nimport { scoped } from './vidstack-CNjv_Zem.js';\nimport { HTMLMediaProvider, HTMLAirPlayAdapter } from './vidstack-WyKbSRm0.js';\nimport 'react';\nimport '@floating-ui/dom';\n\nclass AudioProvider extends HTMLMediaProvider {\n  $$PROVIDER_TYPE = \"AUDIO\";\n  get type() {\n    return \"audio\";\n  }\n  airPlay;\n  constructor(audio, ctx) {\n    super(audio, ctx);\n    scoped(() => {\n      this.airPlay = new HTMLAirPlayAdapter(this.media, ctx);\n    }, this.scope);\n  }\n  setup() {\n    super.setup();\n    if (this.type === \"audio\") this.ctx.notify(\"provider-setup\", this);\n  }\n  /**\n   * The native HTML `<audio>` element.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement}\n   */\n  get audio() {\n    return this.media;\n  }\n}\n\nexport { AudioProvider };\n"],"names":["AudioProvider","HTMLMediaProvider","audio","ctx","__publicField","scoped","HTMLAirPlayAdapter"],"mappings":";;;;AAOA,MAAMA,UAAsBC,EAAkB;AAAA,EAM5C,YAAYC,GAAOC,GAAK;AACtB,UAAMD,GAAOC,CAAG;AANlB,IAAAC,EAAA,yBAAkB;AAIlB,IAAAA,EAAA;AAGE,IAAAC,EAAO,MAAM;AACX,WAAK,UAAU,IAAIC,EAAmB,KAAK,OAAOH,CAAG;AAAA,IAC3D,GAAO,KAAK,KAAK;AAAA,EACjB;AAAA,EATE,IAAI,OAAO;AACT,WAAO;AAAA,EACX;AAAA,EAQE,QAAQ;AACN,UAAM,MAAO,GACT,KAAK,SAAS,WAAS,KAAK,IAAI,OAAO,kBAAkB,IAAI;AAAA,EACrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAME,IAAI,QAAQ;AACV,WAAO,KAAK;AAAA,EAChB;AACA;","x_google_ignoreList":[0]}
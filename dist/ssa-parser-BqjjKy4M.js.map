{"version":3,"file":"ssa-parser-BqjjKy4M.js","sources":["../node_modules/media-captions/dist/prod/ssa-parser.js"],"sourcesContent":["import { b as VTTCue, p as parseVTTTimestamp } from './index.js';\n\nconst FORMAT_START_RE = /^Format:[\\s\\t]*/, STYLE_START_RE = /^Style:[\\s\\t]*/, DIALOGUE_START_RE = /^Dialogue:[\\s\\t]*/, FORMAT_SPLIT_RE = /[\\s\\t]*,[\\s\\t]*/, STYLE_FUNCTION_RE = /\\{[^}]+\\}/g, NEW_LINE_RE = /\\\\N/g, STYLES_SECTION_START_RE = /^\\[(.*)[\\s\\t]?Styles\\]$/, EVENTS_SECTION_START_RE = /^\\[(.*)[\\s\\t]?Events\\]$/;\nclass SSAParser {\n  h;\n  O = 0;\n  c = null;\n  l = [];\n  m = [];\n  N = null;\n  f;\n  P = {};\n  async init(init) {\n    this.h = init;\n    if (init.errors)\n      this.f = (await import('./errors.js')).ParseErrorBuilder;\n  }\n  parse(line, lineCount) {\n    if (this.O) {\n      switch (this.O) {\n        case 1:\n          if (line === \"\") {\n            this.O = 0;\n          } else if (STYLE_START_RE.test(line)) {\n            if (this.N) {\n              const styles = line.replace(STYLE_START_RE, \"\").split(FORMAT_SPLIT_RE);\n              this.S(styles);\n            } else {\n              this.g(this.f?.T(\"Style\", lineCount));\n            }\n          } else if (FORMAT_START_RE.test(line)) {\n            this.N = line.replace(FORMAT_START_RE, \"\").split(FORMAT_SPLIT_RE);\n          } else if (EVENTS_SECTION_START_RE.test(line)) {\n            this.N = null;\n            this.O = 2;\n          }\n          break;\n        case 2:\n          if (line === \"\") {\n            this.Q();\n          } else if (DIALOGUE_START_RE.test(line)) {\n            this.Q();\n            if (this.N) {\n              const dialogue = line.replace(DIALOGUE_START_RE, \"\").split(FORMAT_SPLIT_RE), cue = this.U(dialogue, lineCount);\n              if (cue)\n                this.c = cue;\n            } else {\n              this.g(this.f?.T(\"Dialogue\", lineCount));\n            }\n          } else if (this.c) {\n            this.c.text += \"\\n\" + line.replace(STYLE_FUNCTION_RE, \"\").replace(NEW_LINE_RE, \"\\n\");\n          } else if (FORMAT_START_RE.test(line)) {\n            this.N = line.replace(FORMAT_START_RE, \"\").split(FORMAT_SPLIT_RE);\n          } else if (STYLES_SECTION_START_RE.test(line)) {\n            this.N = null;\n            this.O = 1;\n          } else if (EVENTS_SECTION_START_RE.test(line)) {\n            this.N = null;\n          }\n      }\n    } else if (line === \"\") ; else if (STYLES_SECTION_START_RE.test(line)) {\n      this.N = null;\n      this.O = 1;\n    } else if (EVENTS_SECTION_START_RE.test(line)) {\n      this.N = null;\n      this.O = 2;\n    }\n  }\n  done() {\n    return {\n      metadata: {},\n      cues: this.l,\n      regions: [],\n      errors: this.m\n    };\n  }\n  Q() {\n    if (!this.c)\n      return;\n    this.l.push(this.c);\n    this.h.onCue?.(this.c);\n    this.c = null;\n  }\n  S(values) {\n    let name = \"Default\", styles = {}, outlineX, align = \"center\", vertical = \"bottom\", marginV, outlineY = 1.2, outlineColor, bgColor, borderStyle = 3, transform = [];\n    for (let i = 0; i < this.N.length; i++) {\n      const field = this.N[i], value = values[i];\n      switch (field) {\n        case \"Name\":\n          name = value;\n          break;\n        case \"Fontname\":\n          styles[\"font-family\"] = value;\n          break;\n        case \"Fontsize\":\n          styles[\"font-size\"] = `calc(${value} / var(--overlay-height))`;\n          break;\n        case \"PrimaryColour\":\n          const color = parseColor(value);\n          if (color)\n            styles[\"--cue-color\"] = color;\n          break;\n        case \"BorderStyle\":\n          borderStyle = parseInt(value, 10);\n          break;\n        case \"BackColour\":\n          bgColor = parseColor(value);\n          break;\n        case \"OutlineColour\":\n          const _outlineColor = parseColor(value);\n          if (_outlineColor)\n            outlineColor = _outlineColor;\n          break;\n        case \"Bold\":\n          if (parseInt(value))\n            styles[\"font-weight\"] = \"bold\";\n          break;\n        case \"Italic\":\n          if (parseInt(value))\n            styles[\"font-style\"] = \"italic\";\n          break;\n        case \"Underline\":\n          if (parseInt(value))\n            styles[\"text-decoration\"] = \"underline\";\n          break;\n        case \"StrikeOut\":\n          if (parseInt(value))\n            styles[\"text-decoration\"] = \"line-through\";\n          break;\n        case \"Spacing\":\n          styles[\"letter-spacing\"] = value + \"px\";\n          break;\n        case \"AlphaLevel\":\n          styles[\"opacity\"] = parseFloat(value);\n          break;\n        case \"ScaleX\":\n          transform.push(`scaleX(${parseFloat(value) / 100})`);\n          break;\n        case \"ScaleY\":\n          transform.push(`scaleY(${parseFloat(value) / 100})`);\n          break;\n        case \"Angle\":\n          transform.push(`rotate(${value}deg)`);\n          break;\n        case \"Shadow\":\n          outlineY = parseInt(value, 10) * 1.2;\n          break;\n        case \"MarginL\":\n          styles[\"--cue-width\"] = \"auto\";\n          styles[\"--cue-left\"] = parseFloat(value) + \"px\";\n          break;\n        case \"MarginR\":\n          styles[\"--cue-width\"] = \"auto\";\n          styles[\"--cue-right\"] = parseFloat(value) + \"px\";\n          break;\n        case \"MarginV\":\n          marginV = parseFloat(value);\n          break;\n        case \"Outline\":\n          outlineX = parseInt(value, 10);\n          break;\n        case \"Alignment\":\n          const alignment = parseInt(value, 10);\n          if (alignment >= 4)\n            vertical = alignment >= 7 ? \"top\" : \"center\";\n          switch (alignment % 3) {\n            case 1:\n              align = \"start\";\n              break;\n            case 2:\n              align = \"center\";\n              break;\n            case 3:\n              align = \"end\";\n              break;\n          }\n      }\n    }\n    styles.R = vertical;\n    styles[\"--cue-white-space\"] = \"normal\";\n    styles[\"--cue-line-height\"] = \"normal\";\n    styles[\"--cue-text-align\"] = align;\n    if (vertical === \"center\") {\n      styles[`--cue-top`] = \"50%\";\n      transform.push(\"translateY(-50%)\");\n    } else {\n      styles[`--cue-${vertical}`] = (marginV || 0) + \"px\";\n    }\n    if (borderStyle === 1) {\n      styles[\"--cue-padding-y\"] = \"0\";\n    }\n    if (borderStyle === 1 || bgColor) {\n      styles[\"--cue-bg-color\"] = borderStyle === 1 ? \"none\" : bgColor;\n    }\n    if (borderStyle === 3 && outlineColor) {\n      styles[\"--cue-outline\"] = `${outlineX}px solid ${outlineColor}`;\n    }\n    if (borderStyle === 1 && typeof outlineX === \"number\") {\n      const color = bgColor ?? \"#000\";\n      styles[\"--cue-text-shadow\"] = [\n        outlineColor && buildTextShadow(outlineX * 1.2, outlineY * 1.2, outlineColor),\n        outlineColor ? buildTextShadow(outlineX * (outlineX / 2), outlineY * (outlineX / 2), color) : buildTextShadow(outlineX, outlineY, color)\n      ].filter(Boolean).join(\", \");\n    }\n    if (transform.length)\n      styles[\"--cue-transform\"] = transform.join(\" \");\n    this.P[name] = styles;\n  }\n  U(values, lineCount) {\n    const fields = this.V(values);\n    const timestamp = this.q(fields.Start, fields.End, lineCount);\n    if (!timestamp)\n      return;\n    const cue = new VTTCue(timestamp[0], timestamp[1], \"\"), styles = { ...this.P[fields.Style] || {} }, voice = fields.Name ? `<v ${fields.Name}>` : \"\";\n    const vertical = styles.R, marginLeft = fields.MarginL && parseFloat(fields.MarginL), marginRight = fields.MarginR && parseFloat(fields.MarginR), marginV = fields.MarginV && parseFloat(fields.MarginV);\n    if (marginLeft) {\n      styles[\"--cue-width\"] = \"auto\";\n      styles[\"--cue-left\"] = marginLeft + \"px\";\n    }\n    if (marginRight) {\n      styles[\"--cue-width\"] = \"auto\";\n      styles[\"--cue-right\"] = marginRight + \"px\";\n    }\n    if (marginV && vertical !== \"center\") {\n      styles[`--cue-${vertical}`] = marginV + \"px\";\n    }\n    cue.text = voice + values.slice(this.N.length - 1).join(\", \").replace(STYLE_FUNCTION_RE, \"\").replace(NEW_LINE_RE, \"\\n\");\n    delete styles.R;\n    if (Object.keys(styles).length)\n      cue.style = styles;\n    return cue;\n  }\n  V(values) {\n    const fields = {};\n    for (let i = 0; i < this.N.length; i++) {\n      fields[this.N[i]] = values[i];\n    }\n    return fields;\n  }\n  q(startTimeText, endTimeText, lineCount) {\n    const startTime = parseVTTTimestamp(startTimeText), endTime = parseVTTTimestamp(endTimeText);\n    if (startTime !== null && endTime !== null && endTime > startTime) {\n      return [startTime, endTime];\n    } else {\n      if (startTime === null) {\n        this.g(this.f?.s(startTimeText, lineCount));\n      }\n      if (endTime === null) {\n        this.g(this.f?.t(endTimeText, lineCount));\n      }\n      if (startTime != null && endTime !== null && endTime > startTime) {\n        this.g(this.f?.u(startTime, endTime, lineCount));\n      }\n    }\n  }\n  g(error) {\n    if (!error)\n      return;\n    this.m.push(error);\n    if (this.h.strict) {\n      this.h.cancel();\n      throw error;\n    } else {\n      this.h.onError?.(error);\n    }\n  }\n}\nfunction parseColor(color) {\n  const abgr = parseInt(color.replace(\"&H\", \"\"), 16);\n  if (abgr >= 0) {\n    const a = abgr >> 24 & 255 ^ 255;\n    const alpha = a / 255;\n    const b = abgr >> 16 & 255;\n    const g = abgr >> 8 & 255;\n    const r = abgr & 255;\n    return \"rgba(\" + [r, g, b, alpha].join(\",\") + \")\";\n  }\n  return null;\n}\nfunction buildTextShadow(x, y, color) {\n  const noOfShadows = Math.ceil(2 * Math.PI * x);\n  let textShadow = \"\";\n  for (let i = 0; i < noOfShadows; i++) {\n    const theta = 2 * Math.PI * i / noOfShadows;\n    textShadow += x * Math.cos(theta) + \"px \" + y * Math.sin(theta) + \"px 0 \" + color + (i == noOfShadows - 1 ? \"\" : \",\");\n  }\n  return textShadow;\n}\nfunction createSSAParser() {\n  return new SSAParser();\n}\n\nexport { SSAParser, createSSAParser as default };\n"],"names":["FORMAT_START_RE","STYLE_START_RE","DIALOGUE_START_RE","FORMAT_SPLIT_RE","STYLE_FUNCTION_RE","NEW_LINE_RE","STYLES_SECTION_START_RE","EVENTS_SECTION_START_RE","SSAParser","__publicField","init","line","lineCount","styles","_a","dialogue","cue","_b","values","name","outlineX","align","vertical","marginV","outlineY","outlineColor","bgColor","borderStyle","transform","i","field","value","color","parseColor","_outlineColor","alignment","buildTextShadow","fields","timestamp","VTTCue","voice","marginLeft","marginRight","startTimeText","endTimeText","startTime","parseVTTTimestamp","endTime","_c","error","abgr","alpha","b","g","x","y","noOfShadows","textShadow","theta","createSSAParser"],"mappings":"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","x_google_ignoreList":[0]}